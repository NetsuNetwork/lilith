[changelog]
header = """
# 🌺 Changelog 🌺 \n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}]\
    {% if previous %}\
      {% if previous.version -%}
        (https://github.com/NetsuNetwork/lilith/compare/{{ previous.version }}...{{ version }})\
      {% else -%}\
        (https://github.com/NetsuNetwork/lilith/version/{{ version }})\
      {% endif %}\
    {% endif%} \
    - {{ timestamp | date(format="%Y-%m-%d") }}\
{% else %}\
    ## [unreleased]
{% endif %}
{% if previous %}\
    {% if previous.commit_id %}
        [{{ previous.commit_id | truncate(length=7, end="") }}]({{ previous.commit_id }})...\
            [{{ commit_id | truncate(length=7, end="") }}]({{ commit_id }})
    {% endif %}\
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | trim | upper_first }}
    {% for commit in commits %}
        {%- if commit.scope -%}
        - *({{ commit.scope }})* {{ commit.message | upper_first }} \
        {% else -%}
        - {{ commit.message | upper_first }} \
        {% endif -%}\
        {% if commit.breaking -%}
          **BREAKING** \
        {% endif -%}
        ([{{ commit.id | truncate(length=7, end="") }}]({{ commit.id }})) \
        {{ commit.author.name }}
          {% for footer in commit.footers -%}
            , {{ footer.token }}{{ footer.separator }}{{ footer.value }}\
          {% endfor %}\
    {% endfor -%}
{%- endfor -%}\n
"""
trim = true
footer = ""

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_preprocessors = [
  # { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](https://github.com/orhun/git-cliff/issues/${2}))"}, # replace issue numbers
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat", group = "*OwO* New Features" },
  { message = "^fix", group = "🐞 Bug Fixes" },
  { message = "^doc", group = "📓 Documentation Changes" },
  { message = "^perf", group = "⏱️ Performance" },
  { message = "^refactor", group = "Refactor" },
  { message = "^revert", skip = true },
  { message = "^style", group = "💄 Styling" },
  { message = "^test", group = "🧪 Testing" },
  { message = "^release", skip = true },
  { message = "^chore", group = "💤 Miscellaneous Tasks" },
  { body = ".*security", group = "🛡️ Security" },
]

protect_breaking_commits = false
filter_commits = false
tag_pattern = "v[0-9]*"
ignore_tags = ""
topo_order = false
sort_commits = "oldest"
